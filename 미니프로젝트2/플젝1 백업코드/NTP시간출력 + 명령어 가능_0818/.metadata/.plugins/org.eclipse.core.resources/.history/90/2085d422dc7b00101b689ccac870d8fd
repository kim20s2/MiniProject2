//서울기술교육센터 AIOT & Embedded System
//2024-04-16 By KSH


#ifndef __ESP_H__
#define __ESP_H__

#include "stm32f4xx_hal.h"
#include <time.h>

#define MAX_ESP_RX_BUFFER      1024
#define MAX_ESP_COMMAND_LEN    64
#define MAX_ESP_CLIENT_NUM     10

#define SSID "iotA"
#define PASS "iotA1234"
#define LOGID "KSH_ARD"
#define PASSWD "PASSWD"
#define DST_IP "10.10.14.40"
#define DST_PORT 5000

typedef struct _cb_data_t
{
    uint8_t buf[MAX_ESP_RX_BUFFER];
    uint16_t length;
    volatile uint8_t new_data; // ISR에서 Task로 신호
}cb_data_t;

// 기존 함수
int drv_esp_init(void);
int drv_esp_test_command(void);
void AiotClient_Init(void);
int esp_client_conn(void);
void esp_send_data(char *data);
int esp_send_data_id(int link_id, const char *data);
int esp_get_status(void);
void esp_flush_rx_buffer(void);

//==================uart3=========================
#define MAX_UART_RX_BUFFER      512
#define MAX_UART_COMMAND_LEN    64

int drv_uart_init(void);
int drv_uart_rx_buffer(uint8_t *buf, uint16_t size);
int drv_uart_tx_buffer(uint8_t *buf, uint16_t size);
//==================uart3=========================
// NTP 함수
int esp_ntp_config(void);
int esp_at_command(uint8_t *cmd, uint8_t *resp, uint16_t *length, int16_t time_out);
int parse_cipsntptime_line(const char *line, time_t *epoch_out);
void get_base_datetime(char *base_date_str, size_t date_len,
                       char *base_time_str, size_t time_len);
//
// esp.h
int esp_weather_ultra_request(const char *apiKey, int nx, int ny, char *outBuf, size_t outSize);
void parse_weather_now(const char *resp_all);


extern char response[MAX_ESP_RX_BUFFER];
extern uint16_t length;

#endif
