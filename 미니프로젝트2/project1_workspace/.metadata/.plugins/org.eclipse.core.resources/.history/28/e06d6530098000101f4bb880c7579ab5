#include "lcd.h"
#include "cmsis_os.h"
#include "string.h"
#include "stdio.h"

#ifndef LCD_I2C_ADDR
#define LCD_I2C_ADDR (0x27U << 1)
#endif

/* 백팩 비트: D7..D4 | BL | EN | RW | RS
 * 여기서는 RS(0x01), RW(0x02=0), EN(0x04), BL(0x08)
 */
static I2C_HandleTypeDef *lcd_hi2c;
static inline void LCD_Delay(uint32_t ms) { osDelay(ms); }

static void LCD_Send_Cmd(uint8_t cmd);
static void LCD_Send_Data(uint8_t data);
static void LCD_Send(uint8_t data, uint8_t rs);

void LCD_Init(I2C_HandleTypeDef *hi2c)
{
    lcd_hi2c = hi2c;

    LCD_Delay(50);         // 전원 안정
    LCD_Send_Cmd(0x33);    // 4-bit 모드 진입 시퀀스
    LCD_Send_Cmd(0x32);
    LCD_Send_Cmd(0x28);    // 4-bit, 2라인, 5x8 폰트
    LCD_Send_Cmd(0x0C);    // Display ON, Cursor OFF, Blink OFF
    LCD_Send_Cmd(0x06);    // Entry mode: inc, no shift
    LCD_Send_Cmd(0x01);    // Clear
    LCD_Delay(5);
}

void LCD_Clear(void)
{
    LCD_Send_Cmd(0x01);
    LCD_Delay(2);
}

void LCD_SetCursor(uint8_t row, uint8_t col)
{
    uint8_t addr = (row == 0) ? (0x80 + col) : (0xC0 + col);
    LCD_Send_Cmd(addr);
}

void LCD_Print(char *str)
{
    while (*str) {
        LCD_Send_Data((uint8_t)*str++);
    }
}

/* --- Low-level --- */
static void LCD_Send_Cmd(uint8_t cmd)
{
    LCD_Send(cmd & 0xF0, 0);
    LCD_Send((cmd << 4) & 0xF0, 0);
}

static void LCD_Send_Data(uint8_t data)
{
    LCD_Send(data & 0xF0, 1);
    LCD_Send((data << 4) & 0xF0, 1);
}

static void LCD_Send(uint8_t data, uint8_t rs)
{
    uint8_t base   = (rs ? 0x01 : 0x00) | 0x08; // RS + Backlight ON
    uint8_t en_on  = base | 0x04;
    uint8_t en_off = base & (uint8_t)~0x04;

    uint8_t frame[2];
    frame[0] = data | en_on;
    frame[1] = data | en_off;

    /* 타임아웃 너무 길게 잡지 않기: 20ms */
    HAL_I2C_Master_Transmit(lcd_hi2c, LCD_I2C_ADDR, frame, 2, 20);
    LCD_Delay(1);
}
